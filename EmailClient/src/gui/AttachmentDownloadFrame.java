/*
 * AttachmentDownloadFrame.java
 *
 * Created on November 23, 2009, 8:44 PM
 */

package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import threads.AttachmentDownloaderThread;

import email.EmailAttachment;
import email.EmailMessage;

import account.MailAccount;

/**
 *
 * @author  Pratik
 */
public class AttachmentDownloadFrame extends javax.swing.JFrame implements Runnable {

	public static final String DOWNLOAD_STATUSES[]={"Connecting.","Connecting..","Connecting...","Connected","Folder Opened","Downloading"};
	public static final int STATUS_CONNECTING=0;
	public static final int STATUS_CONNECTED=3;
	public static final int STATUS_FOLDER_OPENED=4;
	public static final int STATUS_DOWNLOADING=5;
	public static final String DOWNLOAD_STATUS_LABEL="Download Status: ";
	public static final String FILENAME_LABEL="File Name: ";
	public static final String FILESIZE_LABEL="File Size: ";		

	private MailAccount mailAccount;
	private EmailMessage emailMessage;
	private EmailAttachment emailAttachment;
	private String folderName;
	private Thread t;
	private AttachmentDownloaderThread t2;
	int connectionStatus=0;
	boolean downloadComplete=false;
	float percent=0.0f;
	int complete=0;

	/** Creates new form AttachmentDownloadFrame */
	public AttachmentDownloadFrame(MailAccount mailAccount,EmailMessage emailMessage,EmailAttachment emailAttachment,String folderName) {
		this.mailAccount=mailAccount;
		this.emailMessage=emailMessage;
		this.emailAttachment=emailAttachment;
		this.folderName=folderName;
		initComponents();
		t=new Thread(this);   		
		t.start();		
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		panel = new javax.swing.JPanel();
		lblFileName = new javax.swing.JLabel();
		lblSize = new javax.swing.JLabel();
		lblDownloadStatus = new javax.swing.JLabel();
		prgDownload = new javax.swing.JProgressBar();
		cmdCancel = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Attachment Download");
		setResizable(false);
		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				formWindowClosing(evt);
			}
		});

		lblFileName.setText(FILENAME_LABEL+emailAttachment.getAttachmentName());

		lblSize.setText(FILESIZE_LABEL+emailAttachment.getFormattedSize()+" "+emailAttachment.getAttachmentUnit());

		lblDownloadStatus.setText(DOWNLOAD_STATUS_LABEL+DOWNLOAD_STATUSES[STATUS_CONNECTING]);        

		prgDownload.setStringPainted(true);
		prgDownload.setMinimum(0);
		prgDownload.setMaximum(100);

		cmdCancel.setText("Cancel");
		cmdCancel.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {
				close();      		
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(panel);
		panel.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(lblFileName)
								.addComponent(lblSize)
								.addComponent(lblDownloadStatus)
								.addComponent(prgDownload, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(cmdCancel)
								.addContainerGap())
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(lblFileName)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblSize)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(lblDownloadStatus)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(cmdCancel, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
								.addComponent(prgDownload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
		);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(11, Short.MAX_VALUE))
		);
		setVisible(true);
		pack();
	}// </editor-fold>

	private void formWindowClosing(java.awt.event.WindowEvent evt) {
		// TODO add your handling code here:
	}

	public void close() {
		t2.stopThread();
		dispose();
	}
	
	public void restart() {
		t2 = new AttachmentDownloaderThread(this);
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new AttachmentDownloadFrame(null,null,null,null).setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton cmdCancel;
	private javax.swing.JPanel panel;
	private javax.swing.JLabel lblDownloadStatus;
	private javax.swing.JLabel lblFileName;
	private javax.swing.JLabel lblSize;
	private javax.swing.JProgressBar prgDownload;
	// End of variables declaration

	@Override
	public void run() {	
		t2 = new AttachmentDownloaderThread(this);
		while(!downloadComplete) {
			percent =  complete*100/emailAttachment.getAttachmentSize();   			
			setStatus();
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		close();
	}
	private void setStatus() {
		if(connectionStatus < 3) {
			lblDownloadStatus.setText(DOWNLOAD_STATUS_LABEL+DOWNLOAD_STATUSES[connectionStatus]);
			connectionStatus = (connectionStatus+1)%3;
		}
		prgDownload.setValue((int) percent);
	}

	public MailAccount getMailAccount() {
		return mailAccount;
	}

	public EmailMessage getEmailMessage() {
		return emailMessage;
	}

	public EmailAttachment getEmailAttachment() {
		return emailAttachment;
	}

	public String getFolderName() {
		return folderName;
	}

	public void setConnectionStatus(int connectionStatus) {
		this.connectionStatus = connectionStatus;
		lblDownloadStatus.setText(DOWNLOAD_STATUS_LABEL+DOWNLOAD_STATUSES[connectionStatus]);
		setStatus();
	}

	public void setDownloadComplete(boolean downloadComplete) {
		this.downloadComplete = downloadComplete;
	}

	public void setComplete(int complete) {
		this.complete = complete;
	}
	
}

